const sh = require('shelljs');
const config = require('./config.json');

const path = sh.pwd().stdout;

const CACHE_DIR = `${path}\\cache`;
const COMMAND_PATH = `${CACHE_DIR}\\steamcommand`;
const MOD_DIR = `${config.outDir}\\mods`

const cleanDirectories = () => {
  sh.mkdir('-p', CACHE_DIR);
  sh.rm(COMMAND_PATH);
  sh.touch(COMMAND_PATH);
  sh.rm('-rf', config.outDir);
  sh.mkdir('-p', MOD_DIR);
}

const downloadMods = () => {
  sh.ShellString(`// auto-generated by workshop-downloader
@ShutdownOnFailedCommand 0
@NoPromptForPassword 1
login ${config.username} ${config.password}
force_install_dir ${CACHE_DIR}
`).to(COMMAND_PATH);

  Object.values(config.workshopItems).forEach((itemId) => {
    sh.ShellString(`workshop_download_item ${config.appid} ${itemId}\n`).toEnd(COMMAND_PATH);
  });

  sh.ShellString('quit').toEnd(COMMAND_PATH);

  sh.exec(`${config.steamCMD} +runscript ${COMMAND_PATH}`);
}


const moveMods = () => {
  Object.entries(config.workshopItems).forEach(([name, id]) => {
    const modDir = `${MOD_DIR}\\${name}`;
    sh.mv(`${CACHE_DIR}\\steamapps\\workshop\\content\\${config.appid}\\${id}`, modDir);
    sh.echo(`Installed mod: ${modDir}`);
  });
}

const moveIncludes = () => {
  Object.entries(config.includes).forEach(([parentMod, children]) => {
    children.forEach((childLocation) => {
      sh.mv(`${MOD_DIR}\\${parentMod}\\${childLocation}`, `${MOD_DIR}`);
      sh.echo(`Included mod: ${MOD_DIR}\\${childLocation}`);
    })
  });
}

const generateModlist = () => {
  const MOD_LIST = `${config.outDir}\\modlist`;
  sh.touch(MOD_LIST);

  const modList = '-mod=' + sh.ls(MOD_DIR).map((mod) => `${MOD_DIR}\\${mod};`).join('');
  sh.ShellString(modList).to(MOD_LIST);
}

(() => {
  cleanDirectories();
  downloadMods();
  moveMods();
  moveIncludes();
  generateModlist();

  sh.echo(`Mod installation complete.`);
  sh.echo(`Output: ${config.outDir}`);
})();
